package main

import (
	"encoding/binary"
	"fmt"
)

func testDraw() {
	// Main
	//Make screen white
	for i := range pixels {
		pixels[i] = 0xff
	}
	tiles := []uint64{
		0x0000464646467E7E, //H
		0x4646464646460000,
		0x00003C3C18181818, //I
		0x181818183C3C0000,
		0x00001E1E0C0C0C0C, //J
		0x6C6C6C6C38380000,
		0x0000464646464646, //U
		0x46464E4E3C3C0000,
		0x00007E7E60607C7C, //E
		0x606060607E7E0000,
		0x00007C7C66666666, //P
		0x7C7C606060600000,
		0x0000464646464646, //U
		0x46464E4E3C3C0000,
		0x00007E7E18181818, //T
		0x1818181818180000,
		0x00003C3C4E4E4E4E, //A
		0x7E7E4E4E4E4E0000,
		0x0000000000000000, //
		0x0000000000000000,
		0x0000464646464646, //V
		0x46462C2C18180000,
		0x00003C3C4E4E4E4E, //A
		0x7E7E4E4E4E4E0000,
		0x000046466E6E7E7E, //M
		0x5656464646460000,
		0x00003C3C66666666, //O
		0x666666663C3C0000,
		0x00003C3C60603C3C, //S
		0x0E0E4E4E3C3C0000,
		0x0000000000000000, //
		0x0000000000000000,
		0x00003C3C4E4E4E4E, //A
		0x7E7E4E4E4E4E0000,
		0x0000606060606060, //L
		0x606060607E7E0000,
		0x0000000000000000, //
		0x0000000000000000,
		0x0000000000000000, //
		0x0000000000000000,
		0x00007E7E60607C7C, //E
		0x606060607E7E0000,
		0x00003C3C62626262, //Q
		0x6A6A64643A3A0000,
		0x0000464646464646, //U
		0x46464E4E3C3C0000,
		0x00003C3C4E4E4E4E, //A
		0x7E7E4E4E4E4E0000,
		0x00007E7E18181818, //T
		0x1818181818180000,
		0x00003C3C66666666, //O
		0x666666663C3C0000,
		0x00007C7C66666666, //R
		0x7C7C686866660000,
		0x00003C3C18181818, //I
		0x181818183C3C0000,
		0x00003C3C4E4E4E4E, //A
		0x7E7E4E4E4E4E0000,
		0x0000464666667676, //N
		0x5E5E4E4E46460000,
		0x00003C3C66666666, //O
		0x666666663C3C0000,
		0x0000000000000000, //
		0x0000000000000000,
		0x00007E7E60607C7C, //E
		0x606060607E7E0000,
		0x00003C3C60603C3C, //S
		0x0E0E4E4E3C3C0000,
		0x00007E7E18181818, //T
		0x1818181818180000,
		0x00007E7E60607C7C, //E
		0x606060607E7E0000,
		0x0000000000000000, //
		0x0000000000000000,
		0x0000000000000000, //
		0x0000000000000000,
		0x0000000000000000, //
		0x0000000000000000,
		0x0000000000000000, //
		0x0000000000000000,
		0x0000606060606060, //L
		0x606060607E7E0000,
		0x0000464646464646, //U
		0x46464E4E3C3C0000,
		0x0000464666667676, //N
		0x5E5E4E4E46460000,
		0x00007E7E60607C7C, //E
		0x606060607E7E0000,
		0x00003C3C60603C3C, //S
		0x0E0E4E4E3C3C0000,
		0x0000000000000000, //.
		0x0000606060600000}
	//0x00007C7C4E4E4E4E, //D
	//0x4E4E4E4E7C7C0000,
	//0x00003C3C66666060, //G
	//0x6E6E66663E3E0000

	low := make([]byte, 8)
	high := make([]byte, 8)
	for i := 0; i < len(tiles); i += 2 {
		binary.BigEndian.PutUint64(low, tiles[i+1])
		binary.BigEndian.PutUint64(high, tiles[i])
		b := append(high, low...)
		tile := twoBPP(b)
		drawTile(tile)
		b = nil
	}

	showWindow()

}

func debug1() {
	fmt.Printf("Instruction number:%d\n", instNumber)
	fmt.Printf("af=%02X%02X\n", regs.A, getRegF())
	fmt.Printf("bc=%02X%02X\n", regs.B, regs.C)
	fmt.Printf("de=%02X%02X\n", regs.D, regs.E)
	fmt.Printf("hl=%02X%02X\n", regs.H, regs.L)
	fmt.Printf("sp=%04X\n", regs.SP)
	fmt.Printf("pc=%04X\n", regs.PC)
	fmt.Println()
	fmt.Scanln()
}

func debug2() {
	fmt.Printf("%04X:  %02X        TEST                A:%02x B:%02x C:%02x D:%02x E:%02x F:%02x H:%02x L:%02x\n", regs.PC, instructionDEBUG, regs.A, regs.B, regs.C, regs.D, regs.E, getRegF(), regs.H, regs.L)
}
